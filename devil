if not game:IsLoaded() then
    repeat
        task.wait()
    until 
    game:IsLoaded()
end

local repo = 'https://raw.githubusercontent.com/wally-rblx/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    -- Set Center to true if you want the menu to appear in the center
    -- Set AutoShow to true if you want the menu to appear when it is created
    -- Position and Size are also valid options here
    -- but you do not need to define them unless you are changing them :)

    Title = 'Carti Hub â”ƒ Chainsaw Man Script'.. ' - ' ..tostring(identifyexecutor()),
    Center = true, 
    AutoShow = true,
})

-- You do not have to set your tabs & groups up this way, just a prefrence.
local Tabs = {
    -- Creates a new tab titled Main
    Main = Window:AddTab('Main'), 
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

-- Groupbox and Tabbox inherit the same functions
-- except Tabboxes you have to call the functions on a tab (Tabbox:AddTab(name))
local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Auto Use')
local nGroupBox = Tabs.Main:AddLeftGroupbox('Auto Join')
local pGroupBox = Tabs.Main:AddRightGroupbox('Auto Buy')

LeftGroupBox:AddLabel('IMPORTANT!!\nTo Save Config Go To UI Settings\nThen Create A Config\nThen Select It And Press AutoLoad', true)

LeftGroupBox:AddDivider()

LeftGroupBox:AddToggle('friporuse01', {
  Text = 'Auto Use Rank 0-1 Portals',
  Default = false, -- Default value (true / false)
  Tooltip = 'Turn This On To Use Portals That You Select', -- Information shown when you hover over the toggle
})

Toggles.friporuse01:OnChanged(function()
  getgenv().autousepors1 = Toggles.friporuse01.Value
end)

LeftGroupBox:AddToggle('friporuse23', {
  Text = 'Auto Use Rank 2-3 Portals',
  Default = false, -- Default value (true / false)
  Tooltip = 'Turn This On To Use Portals That You Select', -- Information shown when you hover over the toggle
})

Toggles.friporuse23:OnChanged(function()
  getgenv().autousepors2 = Toggles.friporuse23.Value
end)

LeftGroupBox:AddToggle('friporuse45', {
  Text = 'Auto Use Rank 4-5 Portals',
  Default = false, -- Default value (true / false)
  Tooltip = 'Turn This On To Use Portals That You Select', -- Information shown when you hover over the toggle
})

Toggles.friporuse45:OnChanged(function()
  getgenv().autousepors3 = Toggles.friporuse45.Value
end)

LeftGroupBox:AddDivider()

LeftGroupBox:AddToggle('friendsonly', {
  Text = 'Open Portals In Friends Only?',
  Default = false, -- Default value (true / false)
  Tooltip = 'Turn This On To Use Portals In Friends Only', -- Information shown when you hover over the toggle
})

Toggles.friendsonly:OnChanged(function()
  getgenv().friendsonlyop = Toggles.friendsonly.Value
end)

nGroupBox:AddToggle('friporjoin0', {
  Text = 'Auto Join Rank 0 Portals',
  Default = false, -- Default value (true / false)
  Tooltip = 'Turn This On To Join Portals That You Select', -- Information shown when you hover over the toggle
})

Toggles.friporjoin0:OnChanged(function()
  getgenv().autojoinpors0 = Toggles.friporjoin0.Value
end)

nGroupBox:AddToggle('friporjoin1', {
  Text = 'Auto Join Rank 1 Portals',
  Default = false, -- Default value (true / false)
  Tooltip = 'Turn This On To Join Portals That You Select', -- Information shown when you hover over the toggle
})

Toggles.friporjoin0:OnChanged(function()
  getgenv().autojoinpors1 = Toggles.friporjoin1.Value
end)

nGroupBox:AddToggle('friporjoin2', {
  Text = 'Auto Join Rank 2 Portals',
  Default = false, -- Default value (true / false)
  Tooltip = 'Turn This On To Join Portals That You Select', -- Information shown when you hover over the toggle
})

Toggles.friporjoin2:OnChanged(function()
  getgenv().autojoinpors2 = Toggles.friporjoin2.Value
end)

nGroupBox:AddToggle('friporjoin3', {
  Text = 'Auto Join Rank 3 Portals',
  Default = false, -- Default value (true / false)
  Tooltip = 'Turn This On To Join Portals That You Select', -- Information shown when you hover over the toggle
})

Toggles.friporjoin3:OnChanged(function()
  getgenv().autojoinpors3 = Toggles.friporjoin3.Value
end)

nGroupBox:AddToggle('friporjoin4', {
  Text = 'Auto Join Rank 4 Portals',
  Default = false, -- Default value (true / false)
  Tooltip = 'Turn This On To Join Portals That You Select', -- Information shown when you hover over the toggle
})

Toggles.friporjoin4:OnChanged(function()
  getgenv().autojoinpors4 = Toggles.friporjoin4.Value
end)

nGroupBox:AddToggle('friporjoin5', {
  Text = 'Auto Join Rank 5 Portals',
  Default = false, -- Default value (true / false)
  Tooltip = 'Turn This On To Join Portals That You Select', -- Information shown when you hover over the toggle
})

Toggles.friporjoin5:OnChanged(function()
  getgenv().autojoinpors5 = Toggles.friporjoin5.Value
end)

nGroupBox:AddDivider()

nGroupBox:AddToggle('autoleave', {
  Text = 'Auto Leave Portal',
  Default = true, -- Default value (true / false)
  Tooltip = 'Turn This On To Auto Leave In Portals', -- Information shown when you hover over the toggle
})

Toggles.autoleave:OnChanged(function()
  getgenv().autoleave = Toggles.autoleave.Value
end)


pGroupBox:AddToggle('autobuy0', {
  Text = 'Auto Buy Contract 0 Portals',
  Default = false, -- Default value (true / false)
  Tooltip = 'Turn This On To Auto Buy Contracts That You Select', -- Information shown when you hover over the toggle
})

Toggles.autobuy0:OnChanged(function()
  getgenv().autobuycon0 = Toggles.autobuy0.Value
end)

pGroupBox:AddToggle('autobuy1', {
  Text = 'Auto Buy Conrtact 1 Portals',
  Default = false, -- Default value (true / false)
  Tooltip = 'Turn This On To Auto Buy Contracts That You Select', -- Information shown when you hover over the toggle
})

Toggles.autobuy1:OnChanged(function()
  getgenv().autobuycon1 = Toggles.autobuy1.Value
end)

pGroupBox:AddToggle('autobuy2', {
  Text = 'Auto Buy Contract 2 Portals',
  Default = false, -- Default value (true / false)
  Tooltip = 'Turn This On To Auto Buy Contracts That You Select', -- Information shown when you hover over the toggle
})

Toggles.autobuy2:OnChanged(function()
  getgenv().autobuycon2 = Toggles.autobuy2.Value
end)

pGroupBox:AddToggle('autobuy3', {
  Text = 'Auto Buy Contract 3 Portals',
  Default = false, -- Default value (true / false)
  Tooltip = 'Turn This On To Auto Buy Contracts That You Select', -- Information shown when you hover over the toggle
})

Toggles.autobuy3:OnChanged(function()
  getgenv().autobuycon3 = Toggles.autobuy3.Value
end)

pGroupBox:AddToggle('autobuy4', {
  Text = 'Auto Buy Contract 4 Portals',
  Default = false, -- Default value (true / false)
  Tooltip = 'Turn This On To Auto Buy Contracts That You Select', -- Information shown when you hover over the toggle
})

Toggles.autobuy4:OnChanged(function()
  getgenv().autobuycon4 = Toggles.autobuy4.Value
end)

pGroupBox:AddToggle('autobuy5', {
  Text = 'Auto Buy Contract 5 Portals',
  Default = false, -- Default value (true / false)
  Tooltip = 'Turn This On To Auto Buy Contracts That You Select', -- Information shown when you hover over the toggle
})

Toggles.autobuy5:OnChanged(function()
  getgenv().autobuycon5 = Toggles.autobuy5.Value
end)

pGroupBox:AddDivider()

local buystar = pGroupBox:AddButton('Buy Star Fruit Capsule', function()
game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("StarFruitCapsule")
end)

local buycap = pGroupBox:AddButton('Buy Devil Star', function()
  game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("capsule_csm_pity")
end)

local buydance = pGroupBox:AddButton('Buy Chainsaw Man Dance (Rank 5)', function()
  game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("emote__chainsaw_dance")
end)

local buynail = pGroupBox:AddButton('Buy Nail Item (idek What It Does)', function()
  game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("nail")
end)



task.spawn(function()
  while task.wait(0.5) do
    if getgenv().autobuycon0 == true then
      game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_0")
    end
    if getgenv().autobuycon1 == true then
      game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_1")
    end
    if getgenv().autobuycon2 == true then
      game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_2")
    end
    if getgenv().autobuycon3 == true then
      game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_3")
    end
    if getgenv().autobuycon4 == true then
      game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_4")
    end
    if getgenv().autobuycon5 == true then
      game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_5")
    end
  end
end)

Library:SetWatermarkVisibility(true)
task.spawn(function()
    while task.wait() do
      if game.Players.LocalPlayer.AlreadyInLobby.Value == false then 
        Library:SetWatermark('Not Currently In A Portal')
      else
        Library:SetWatermark('You Have Joined A Portal... Loading Info')
      end
        while game.Players.LocalPlayer.AlreadyInLobby.Value == true do
          task.wait()
          getgenv().pormap = game:GetService("Workspace")["_PORTALS"].Lobbies["_lobbytemplateportal29"].Level.Value
          getgenv().pormodifier = game:GetService("Workspace")["_PORTALS"].Lobbies["_lobbytemplateportal29"].Challenge.Value
          getgenv().ownerofpor = tostring(game:GetService("Workspace")["_PORTALS"].Lobbies["_lobbytemplateportal29"].Owner.Value)
          if string.find(getgenv().pormap, "namek") then
            getgenv().pormap = "Planet Namak"
          elseif string.find(getgenv().pormap, "aot") then
            getgenv().pormap = "Attack On Titan"
          elseif string.find(getgenv().pormap, "demonslayer") then
            getgenv().pormap = "Demon Slayer"
          elseif string.find(getgenv().pormap, "naruto") then
            getgenv().pormap = "Hidden Sand Village"
          elseif string.find(getgenv().pormap, "marine") then
            getgenv().pormap = "Marine's Ford"
          elseif string.find(getgenv().pormap, "tokyoghoul") then
            getgenv().pormap = "Ghoul City"
          elseif string.find(getgenv().pormap, "hueco") then
            getgenv().pormap = "Hollows World"
          elseif string.find(getgenv().pormap, "hxhant") then
            getgenv().pormap = "Ant Kingdom"
          elseif string.find(getgenv().pormap, "magnolia") then
            getgenv().pormap = "Magic Town"
          elseif string.find(getgenv().pormap, "jjk") then
            getgenv().pormap = "Cursed Academy"
          elseif string.find(getgenv().pormap, "clover") then
            getgenv().pormap = "Clover Kingdom"
          elseif string.find(getgenv().pormap, "jojo") then
            getgenv().pormap = "Cape Canaveral"
          elseif string.find(getgenv().pormap, "csm") then
            getgenv().pormap = "Chainsaw Man"
          end
          if string.find(getgenv().pormodifier, "fast") then
            getgenv().pormodifier = "Fast Enemies"
          elseif string.find(getgenv().pormodifier, "high") then
            getgenv().pormodifier = "High Cost"
          elseif string.find(getgenv().pormodifier, "shield") then
            getgenv().pormodifier = "Shield Enemies" 
          elseif string.find(getgenv().pormodifier, "regen") then
            getgenv().pormodifier = "Regen Enemies"
          elseif string.find(getgenv().pormodifier, "short") then
            getgenv().pormodifier = "Short Range Units"
          elseif string.find(getgenv().pormodifier, "tank") then
            getgenv().pormodifier = "Tank Enemies"
            end
            if game:GetService("Workspace")["_PORTALS"].Lobbies["_lobbytemplateportal29"].Level.Value ~= nil or "" then 
              if string.find(getgenv().pormap, "winter_1") then
                getgenv().pormapact = "Act 1"
              elseif string.find(getgenv().pormap, "winter_2") then
                getgenv().pormapact = "Act 2"
              elseif string.find(getgenv().pormap, "winter_3") then
                getgenv().pormapact = "Act 3"
              elseif string.find(getgenv().pormap, "winter_4") then
                getgenv().pormapact = "Act 4"
              elseif string.find(getgenv().pormap, "winter_5") then
                getgenv().pormapact = "Act 5"
              elseif string.find(getgenv().pormap, "winter_6") then
                getgenv().pormapact = "Act 6"
              end
            elseif getgenv().pormapact == nil or "" then 
              getgenv().pormapact = "Error Getting Act Number"
            end
          if getgenv().ownerofpor ~= "nil" then 
            task.wait()
            getgenv().pormul = game:GetService("Workspace")["_PORTALS"].Lobbies["_lobbytemplateportal29"].Timer.Value
            getgenv().pordif = game:GetService("Workspace")["_PORTALS"].Lobbies["_lobbytemplateportal29"]["lobby_difficulty_scale"].Value
            getgenv().poract = game:GetService("Workspace")["_PORTALS"].Lobbies["_lobbytemplateportal29"].Level.Value
            getgenv().porplayers = game:GetService("Workspace")["_PORTALS"].Lobbies["_lobbytemplateportal29"].Players:GetChildren()
            Library:SetWatermark('You Have Joined A Portal\n\nPortal Owner: '..getgenv().ownerofpor..'\nTime Until Start: '..tostring(getgenv().pormul)..'\nGame Map: '..tostring(getgenv().pormap).." Act "..tostring((string.match(getgenv().poract, '%d[%d.,]*'))).."\nGame Modifier: "..tostring(getgenv().pormodifier)..'\nPortal Difficulty Scale: '..tostring(string.format("%2.1f", getgenv().pordif))..'x')
          end
    end
end
end)

Library:OnUnload(function()
    print('Unloaded!')
    Library.Unloaded = true
end)

coroutine.resume(coroutine.create(function()
    local GameFinished = game:GetService("Workspace"):WaitForChild("_DATA"):WaitForChild("GameFinished")
    GameFinished:GetPropertyChangedSignal("Value"):Connect(function()
        print("Changed", GameFinished.Value == true)
        if GameFinished.Value == true then
            repeat task.wait() until  game:GetService("Players").LocalPlayer.PlayerGui.ResultsUI.Enabled == true
            task.wait()
            if getgenv().autoleave then
                game:GetService("TeleportService"):Teleport(8304191830, LocalPlayer)
            end
        end
    end)
end))

if not game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("items").grid.List.Outer.ItemFrames:FindFirstChild("portal_csm") then
  if getgenv().autousepors1 == true then
    game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_0")
    game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_1")
  end
end
if not game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("items").grid.List.Outer.ItemFrames:FindFirstChild("portal_csm2") then
  if getgenv().autousepors2 == true then
    game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_2")
    game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_3")
  end
end
if not game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("items").grid.List.Outer.ItemFrames:FindFirstChild("portal_csm3") then
  if getgenv().autobuypors3 == true then
    game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_4")
    game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_5")
  end
end

task.spawn(function()
  while task.wait() do
      if game.Players.LocalPlayer.AlreadyInLobby.Value == false then 
        if getgenv().autousepors1 == true then
          for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("items").grid.List.Outer.ItemFrames:GetChildren()) do 
            if v.Name == 'portal_csm' then 
              game:GetService("ReplicatedStorage").endpoints.client_to_server.use_portal:InvokeServer(tostring(v._uuid_or_id.Value), {["friends_only"] = getgenv().friendsonlyop})
              break
            end
          end
        end
      end
      if game.Players.LocalPlayer.AlreadyInLobby.Value == false then 
        if getgenv().autousepors2 == true then 
          for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("items").grid.List.Outer.ItemFrames:GetChildren()) do 
            if v.Name == 'portal_csm2' then 
              game:GetService("ReplicatedStorage").endpoints.client_to_server.use_portal:InvokeServer(tostring(v._uuid_or_id.Value), {["friends_only"] = getgenv().friendsonlyop})
              break
            end
          end
        end
      end
      if game.Players.LocalPlayer.AlreadyInLobby.Value == false then 
        if getgenv().autousepors3 == true then 
          for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("items").grid.List.Outer.ItemFrames:GetChildren()) do 
            if v.Name == 'portal_csm3' then 
              game:GetService("ReplicatedStorage").endpoints.client_to_server.use_portal:InvokeServer(tostring(v._uuid_or_id.Value), {["friends_only"] = getgenv().friendsonlyop})
              break
            end
          end
        end
      end
  end
end)


task.spawn(function()
  while task.wait() do
      if getgenv().autojoinpors1 == true then
          for _, v in next, game:WaitForChild("Workspace"):WaitForChild("_PORTALS"):WaitForChild("Lobbies"):GetChildren() do
            if v.portal_depth.Value == 1 then
              if string.find(tostring(v.Level.Value), "csm") then
                  game:GetService("ReplicatedStorage").endpoints.client_to_server.request_join_lobby:InvokeServer(tostring(v))
              end
            end
          end
      end
      if getgenv().autojoinpors0 == true then
        for _, v in next, game:WaitForChild("Workspace"):WaitForChild("_PORTALS"):WaitForChild("Lobbies"):GetChildren() do
          if v.portal_depth.Value == 0 then
            if string.find(tostring(v.Level.Value), "csm") then
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_join_lobby:InvokeServer(tostring(v))
            end
          end
        end
    end
      if getgenv().autojoinpors2 == true then
        for _, v in next, game:WaitForChild("Workspace"):WaitForChild("_PORTALS"):WaitForChild("Lobbies"):GetChildren() do
          if v.portal_depth.Value == 2 then
            if string.find(tostring(v.Level.Value), "csm") then
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_join_lobby:InvokeServer(tostring(v))
            end
          end
        end
    end
    if getgenv().autojoinpors3 == true then
      for _, v in next, game:WaitForChild("Workspace"):WaitForChild("_PORTALS"):WaitForChild("Lobbies"):GetChildren() do
        if v.portal_depth.Value == 3 then
          if string.find(tostring(v.Level.Value), "csm") then
              game:GetService("ReplicatedStorage").endpoints.client_to_server.request_join_lobby:InvokeServer(tostring(v))
          end
        end
      end
  end
  if getgenv().autojoinpors4 == true then
    for _, v in next, game:WaitForChild("Workspace"):WaitForChild("_PORTALS"):WaitForChild("Lobbies"):GetChildren() do
      if v.portal_depth.Value == 4 then
        if string.find(tostring(v.Level.Value), "csm") then
            game:GetService("ReplicatedStorage").endpoints.client_to_server.request_join_lobby:InvokeServer(tostring(v))
        end
      end
    end
end
if getgenv().autojoinpors5 == true then
  for _, v in next, game:WaitForChild("Workspace"):WaitForChild("_PORTALS"):WaitForChild("Lobbies"):GetChildren() do
    if v.portal_depth.Value == 5 then
      if string.find(tostring(v.Level.Value), "csm") then
          game:GetService("ReplicatedStorage").endpoints.client_to_server.request_join_lobby:InvokeServer(tostring(v))
      end
    end
  end
end
  end
end)

-- UI Settings
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

-- I set NoUI so it does not show up in the keybinds menu
MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'End', NoUI = true, Text = 'Menu keybind' }) 

Library.ToggleKeybind = Options.MenuKeybind -- Allows you to have a custom keybind for the menu

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- ThemeManager (Allows you to have a menu theme system)

-- Hand the library over to our managers
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

-- Ignore keys that are used by ThemeManager. 
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings() 

-- Adds our MenuKeybind to the ignore list 
-- (do you want each config to have a different menu key? probably not.)
-- use case for doing it this way: 
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
ThemeManager:SetFolder('Cartihub')
SaveManager:SetFolder('Cartihub Devil Update')

-- Builds our config menu on the right side of our tab
SaveManager:BuildConfigSection(Tabs['UI Settings']) 

-- Builds our theme menu (with plenty of built in themes) on the left side
-- NOTE: you can also call ThemeManager:ApplyToGroupbox to add it to a specific groupbox
ThemeManager:ApplyToTab(Tabs['UI Settings'])

-- You can use the SaveManager:LoadAutoloadConfig() to load a config 
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
