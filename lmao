if not game:IsLoaded() then
    repeat
        task.wait()
    until 
    game:IsLoaded()
end

if not game:IsLoaded() then
    game.Loaded:Wait()
    end

local HttpService = game:GetService("HttpService")
local Workspace = game:GetService("Workspace") 
local plr = game:GetService("Players").LocalPlayer
local RunService = game:GetService("RunService")
local mouse = game.Players.LocalPlayer:GetMouse()
local UserInputService = game:GetService("UserInputService")
getgenv().savefilename = "Carti Hub Devil Upd "..game.Players.LocalPlayer.Name..".json"
function Sex()
  -- reads jsonfile
  local jsonData = readfile(savefilename)
  local data = HttpService:JSONDecode(jsonData)

--#region global values
  getgenv().autousepors1 = data.autousepors1
  getgenv().autousepors2 = data.autousepors2
  getgenv().autousepors3 = data.autousepors3  
  getgenv().friendsonlyop = data.friendsonlyop
  getgenv().autostart = data.autostart
  getgenv().autojoinpors0 = data.autojoinpors0
  getgenv().autojoinpors1 = data.autojoinpors1 
  getgenv().autojoinpors2 = data.autojoinpors2
  getgenv().autojoinpors3 = data.autojoinpors3
  getgenv().autojoinpors4 = data.autojoinpors4
  getgenv().autojoinpors5 = data.autojoinpors5
  getgenv().autoleave = data.autoleave
  getgenv().autobuycon0 = data.autobuycon0
  getgenv().autobuycon1 = data.autobuycon1
  getgenv().autobuycon2 = data.autobuycon2
  getgenv().autobuycon3 = data.autobuycon3
  getgenv().autobuycon4 = data.autobuycon4
  getgenv().autobuycon5 = data.autobuycon5
  getgenv().servhoptime = data.servhoptime
  getgenv().Serverhop = data.Serverhop
  getgenv().autosell = data.autosell
  getgenv().sellatwave = data.sellatwave
--#endregion
end
---// updates the json file
--#region update json
  function Updatejson()
      print('updating')
      local xdata = {
          autousepors1 = getgenv().autousepors1,
          autousepors2 = getgenv().autousepors2,
          autousepors3 = getgenv().autousepors3,
          friendsonlyop  = getgenv().friendsonlyop, 
          autostart = getgenv().autostart,
          autojoinpors0 = getgenv().autojoinpors0, 
          autojoinpors1 = getgenv().autojoinpors1,
          autojoinpors2 = getgenv().autojoinpors2,
          autojoinpors3 = getgenv().autojoinpors3,
          autojoinpors4 = getgenv().autojoinpors4,
          autojoinpors5 = getgenv().autojoinpors5,
          autoleave = getgenv().autoleave,
          autobuycon0 = getgenv().autobuycon0,
          autobuycon1 = getgenv().autobuycon1,
          autobuycon2 = getgenv().autobuycon2,
          autobuycon3 = getgenv().autobuycon3,
          autobuycon4 = getgenv().autobuycon4,
          autobuycon5 = getgenv().autobuycon5,
          servhoptime = getgenv().servhoptime,
          Serverhop = getgenv().Serverhop,
          autosell = getgenv().autosell,
          sellatwave = getgenv().sellatwave,
      }

      local json = HttpService:JSONEncode(xdata)
      writefile(savefilename, json)
  end

  if isfile(savefilename) then 

      local jsonData = readfile(savefilename)
      local data = HttpService:JSONDecode(jsonData)
  
      Sex()
  
  else
  --#region CREATES JSON
      local xdata = {
        autousepors1 = false,
        autousepors2 = false,
        autousepors3 = false,
        friendsonlyop  = false, 
        autostart = false,
        autojoinpors0 = false, 
        autojoinpors1 = false,
        autojoinpors2 = false,
        autojoinpors3 = false,
        autojoinpors4 = false,
        autojoinpors5 = false,
        autoleave = false,
        autobuycon0 = false,
        autobuycon1 = false,
        autobuycon2 = false,
        autobuycon3 = false,
        autobuycon4 = false,
        autobuycon5 = false,
        servhoptime = 1,
        Serverhop = false,
        autosell = false,
        sellatwave = "",
      }
  
      local json = HttpService:JSONEncode(xdata)
      writefile(savefilename, json)
  
      Sex()
  --#endregion
  end

local repo = 'https://raw.githubusercontent.com/wally-rblx/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    -- Set Center to true if you want the menu to appear in the center
    -- Set AutoShow to true if you want the menu to appear when it is created
    -- Position and Size are also valid options here
    -- but you do not need to define them unless you are changing them :)

    Title = 'Carti Hub â”ƒ Chainsaw Man Script'.. ' - ' ..tostring(identifyexecutor()),
    Center = true, 
    AutoShow = true,
})

-- You do not have to set your tabs & groups up this way, just a prefrence.
local Tabs = {
    -- Creates a new tab titled Main
    Main = Window:AddTab('Main'), 
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

-- Groupbox and Tabbox inherit the same functions
-- except Tabboxes you have to call the functions on a tab (Tabbox:AddTab(name))
local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Auto Use')
local nGroupBox = Tabs.Main:AddLeftGroupbox('Auto Join')
local pGroupBox = Tabs.Main:AddRightGroupbox('Auto Buy')

LeftGroupBox:AddToggle(
    '',
    {
        Text = 'Auto Use Rank 0-1 Portals',
        Default = getgenv().autousepors1 or false -- If getgenv().autousepors2 does not exist (nil), then the default will be false
    }
):OnChanged(
    function(t) -- value returned
        getgenv().autousepors1 = t -- True or False
        Updatejson()
    end
)

LeftGroupBox:AddToggle(
    '',
    {
        Text = 'Auto Use Rank 2-3 Portals',
        Default = getgenv().autousepors2 or false -- If getgenv().autousepors2 does not exist (nil), then the default will be false
    }
):OnChanged(
    function(t) -- value returned
        getgenv().autousepors2 = t -- True or False
        Updatejson()
    end
)

LeftGroupBox:AddToggle(
    '',
    {
        Text = 'Auto Use Rank 4-5 Portals',
        Default = getgenv().autousepors3 or false -- If getgenv().autousepors2 does not exist (nil), then the default will be false
    }
):OnChanged(
    function(t) -- value returned
        getgenv().autousepors3 = t -- True or False
        Updatejson()
    end
)

LeftGroupBox:AddDivider()

LeftGroupBox:AddToggle(
    'friendsonly',
    {
        Text = 'Open Portals In Friends Only?',
        Default = getgenv().friendsonlyop or false
    }
):OnChanged(
    function(t)
        getgenv().friendsonlyop = t
        Updatejson()
    end
)

LeftGroupBox:AddToggle(
    '',
    {
        Text = 'Auto Start Portals',
        Default = getgenv().autostart or false
    }
):OnChanged(
    function(t)
        getgenv().autostart = t
        Updatejson()
    end
)

if game.PlaceId ~= 8304191830 then 
  LeftGroupBox:AddDivider()
  local deltemap = LeftGroupBox:AddButton('Remove Buildings (Csm Map)', function()
      game:GetService("Workspace")["_terrain"].terrain["small buildings"]:Destroy()
      game:GetService("Workspace")["_terrain"].terrain["inner buildings"]:Destroy()
      game:GetService("Workspace")["_terrain"].hill.Model:Destroy()
      game:GetService("Workspace")["_map"].bricks:Destroy()
      game:GetService("Workspace")["_map"].lanterns:Destroy()
      game:GetService("Workspace")["_map"].wires:Destroy()
      game:GetService("Workspace")["_map"].fences:Destroy()
      game:GetService("Workspace")["_map"].sofas:Destroy()
      game:GetService("Workspace")["_map"].paper:Destroy()
      game:GetService("Workspace")["_map"].extras:Destroy()
      game:GetService("Workspace")["_map"].pipes:Destroy()
      game:GetService("Workspace")["_map"]["traffic cones"]:Destroy()
      game:GetService("Workspace")["_map"]["vending machines"]:Destroy()
      game:GetService("Workspace")["_map"]["wood stacks"]:Destroy()
      game:GetService("Workspace")["_map"].barrels:Destroy()
      game:GetService("Workspace")["_map"].dirt:Destroy()
      game:GetService("Workspace")["_map"].poles:Destroy()
      game:GetService("Workspace")["_map"].crates:Destroy()
      game:GetService("Workspace")["_map"]["sand bags"]:Destroy()
      game:GetService("Workspace")["_map"].baskets:Destroy()
      game:GetService("Workspace")["_map"].benches:Destroy()
      for i,v in pairs(game:GetService("Workspace")["_terrain"].terrain:GetChildren()) do
        print(v.Name)
        if v:IsA("MeshPart") then 
            print(v.Name)
            v:Destroy()
        end
      end
      for i,v in pairs(game:GetService("Workspace")["_map"]["boat and bus"]:GetChildren()) do
        print(v.Name)
        if v.Name == "boat" then 
            v:Destroy()
        end
      end
  end)
end

if game.PlaceId ~= 8304191830 then 
  local raingone = LeftGroupBox:AddButton('Delte Rain (Csm Map)', function()
    game:GetService("Workspace")["_map"].Rain:Destroy()
  end)
end

LeftGroupBox:AddDivider()

LeftGroupBox:AddInput(
    '',
    {
      Default = getgenv().sellatwave or 1,
      Numeric = false, -- true / false, only allows numbers
      Finished = true, -- true / false, only calls callback when you press enter
  
      Text = 'Sell At Wave:',
      Tooltip = 'This Is The Wave That All Speedwagon Will Be Sold At', -- Information shown when you hover over the textbox
  
      Placeholder = 'Wave Here', -- placeholder text when the box is empty
      -- MaxLength is also an option which is the max length of the text
    }
):OnChanged(
    function(t) -- value returned
        getgenv().sellatwave = t -- True or False
        Updatejson()
    end
)

LeftGroupBox:AddToggle(
    '',
    {
      Text = 'Auto Sell Speedwagon At X Wave',
      Default = getgenv().autosell or false, -- Default value (true / false)
      Tooltip = 'Turn This On To Auto Sell Speedwagon At X Wave', -- Information shown when you hover over the toggle
    }
):OnChanged(
    function(t) -- value returned
        getgenv().autosell = t -- True or False
        Updatejson()
    end
)

nGroupBox:AddToggle(
    '',
    {
        Text = 'Auto Join Rank 0 Portals',
        Default = getgenv().autojoinpors0 or false
    }
):OnChanged(
    function(t)
        getgenv().autojoinpors0 = t
        Updatejson()
    end
)


nGroupBox:AddToggle(
    '',
    {
        Text = 'Auto Join Rank 1 Portals',
        Default = getgenv().autojoinpors1 or false
    }
):OnChanged(
    function(t)
        getgenv().autojoinpors1 = t
        Updatejson()
    end
)

nGroupBox:AddToggle(
    '',
    {
        Text = 'Auto Join Rank 2 Portals',
        Default = getgenv().autojoinpors2 or false
    }
):OnChanged(
    function(t)
        getgenv().autojoinpors2 = t
        Updatejson()
    end
)

nGroupBox:AddToggle(
    '',
    {
        Text = 'Auto Join Rank 3 Portals',
        Default = getgenv().autojoinpors3 or false
    }
):OnChanged(
    function(t)
        getgenv().autojoinpors3 = t
        Updatejson()
    end
)

nGroupBox:AddToggle(
    '',
    {
        Text = 'Auto Join Rank 4 Portals',
        Default = getgenv().autojoinpors4 or false
    }
):OnChanged(
    function(t)
        getgenv().autojoinpors4 = t
        Updatejson()
    end
)

nGroupBox:AddToggle(
    '',
    {
        Text = 'Auto Join Rank 5 Portals',
        Default = getgenv().autojoinpors5 or false
    }
):OnChanged(
    function(t)
        getgenv().autojoinpors5 = t
        Updatejson()
    end
)


nGroupBox:AddDivider()

nGroupBox:AddToggle(
    '',
    {
        Text = 'Auto Leave Portal',
        Default = getgenv().autoleave or true
    }
):OnChanged(
    function(t)
        getgenv().autoleave = t
        Updatejson()
    end
)

function TeleportCheck()
  Time = 1 -- seconds
  repeat wait() until game:IsLoaded()
  wait(Time)
  local PlaceID = game.PlaceId
  local AllIDs = {}
  local foundAnything = ""
  local actualHour = os.date("!*t").hour
  local Deleted = false
  function TPReturner()
  local Site;
  if foundAnything == "" then
      Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Desc&limit=100'))
  else
      Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Desc&limit=100&cursor=' .. foundAnything))
  end
  local ID = ""
  if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
      foundAnything = Site.nextPageCursor
  end
  local num = 0;
  for i,v in pairs(Site.data) do
      local Possible = true
      ID = tostring(v.id)
      if tonumber(v.maxPlayers) > tonumber(v.playing) then
          for _,Existing in pairs(AllIDs) do
              if num ~= 0 then
                  if ID == tostring(Existing) then
                      Possible = false
                  end
              else
                  if tonumber(actualHour) ~= tonumber(Existing) then
                      local delFile = pcall(function()
                          delfile("NotSameServers.json")
                          AllIDs = {}
                          table.insert(AllIDs, actualHour)
                      end)
                  end
              end
              num = num + 1
          end
          if Possible == true then
              table.insert(AllIDs, ID)
              wait()
              pcall(function()
                  writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                  wait()
                  game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
              end)
              wait(4)
          end
      end
  end
  end
end

function Teleport()
 while wait() do
     pcall(function()
         TPReturner()
         if foundAnything ~= "" then
             TPReturner()
         end
     end)
 end
end

nGroupBox:AddSlider(
    '',
    {
      Text = 'Auto Workspace Time',
      Default = getgenv().servhoptime or 1,
      Min = 1,
      Max = 60,
      Rounding = 0,
      Suffix = ' Minute(s)',
      Compact = true, -- If set to true, then it will hide the label
    }
):OnChanged(
    function(t)
        getgenv().servhoptime = t
        Updatejson()
    end
)

nGroupBox:AddToggle(
    '',
    {
        Text = 'Auto Server Hop',
        Default = getgenv().Serverhop or false,
        Info = "Will Server Hop After This Many Minutes"
    }
):OnChanged(
    function(Value)
        getgenv().Serverhop = Value
        Updatejson()
          task.spawn(function()
            task.wait(tonumber(getgenv().servhoptime * 60))
            if game.PlaceId == 8304191830 then
              if Value == true then 
                TeleportCheck()
                Teleport()
              end
            end
        end)
    end
)


pGroupBox:AddLabel('IMPORTANT!!\n\nDo Not Turn On Auto Buy Contracts To Afk\n\nThe Script Will Auto Buy If You Run Out Of Portals While Afking\n', true)

pGroupBox:AddToggle(
    '',
    {
        Text = 'Auto Buy Contract 0 Portals',
        Default = getgenv().autobuycon0 or false
    }
):OnChanged(
    function(t)
        getgenv().autobuycon0 = t
        Updatejson()
    end
)

pGroupBox:AddToggle(
    '',
    {
        Text = 'Auto Buy Conrtact 1 Portals',
        Default = getgenv().autobuycon1 or false
    }
):OnChanged(
    function(t)
        getgenv().autobuycon1 = t
        Updatejson()
    end
)

pGroupBox:AddToggle(
    '',
    {
        Text = 'Auto Buy Contract 2 Portals',
        Default = getgenv().autobuycon2 or false
    }
):OnChanged(
    function(t)
        getgenv().autobuycon2 = t
        Updatejson()
    end
)

pGroupBox:AddToggle(
    '',
    {
        Text = 'Auto Buy Contract 3 Portals',
        Default = getgenv().autobuycon3 or false
    }
):OnChanged(
  function(t)
    getgenv().autobuycon3 = t
    Updatejson()
end
)

pGroupBox:AddToggle(
'',
{
    Text = 'Auto Buy Contract 4 Portals',
    Default = getgenv().autobuycon4 or false
}
):OnChanged(
function(t)
    getgenv().autobuycon4 = t
    Updatejson()
end
)

pGroupBox:AddToggle(
'',
{
    Text = 'Auto Buy Contract 5 Portals',
    Default = getgenv().autobuycon5 or false
}
):OnChanged(
function(t)
    getgenv().autobuycon5 = t
    Updatejson()
end
)



pGroupBox:AddDivider()

local buystar = pGroupBox:AddButton('Buy Star Fruit Capsule', function()
game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("StarFruitCapsule")
end)

local buycap = pGroupBox:AddButton('Buy Devil Star', function()
  game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("capsule_csm_pity")
end)

local buydance = pGroupBox:AddButton('Buy Chainsaw Man Dance (Rank 5)', function()
  game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("emote__chainsaw_dance")
end)

local buynail = pGroupBox:AddButton('Buy Nail Item (idek What It Does)', function()
  game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("nail")
end)



task.spawn(function()
  while task.wait(0.5) do
    if getgenv().autobuycon0 == true then
      game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_0")
    end
    if getgenv().autobuycon1 == true then
      game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_1")
    end
    if getgenv().autobuycon2 == true then
      game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_2")
    end
    if getgenv().autobuycon3 == true then
      game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_3")
    end
    if getgenv().autobuycon4 == true then
      game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_4")
    end
    if getgenv().autobuycon5 == true then
      game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_5")
    end
  end
end)
if game.PlaceId ~= 8349889591 then 
  Library:SetWatermarkVisibility(true)
task.spawn(function()
    while task.wait() do
      if game.Players.LocalPlayer.AlreadyInLobby.Value == false then 
        Library:SetWatermark('Not Currently In A Portal')
      else
        if game.Players.LocalPlayer.AlreadyInLobby.Value == true then 
          task.wait()
          getgenv().pormap = game:GetService("Workspace")["_PORTALS"].Lobbies["_lobbytemplateportal29"].Level.Value
          getgenv().pormodifier = game:GetService("Workspace")["_PORTALS"].Lobbies["_lobbytemplateportal29"].Challenge.Value
          getgenv().ownerofpor = tostring(game:GetService("Workspace")["_PORTALS"].Lobbies["_lobbytemplateportal29"].Owner.Value)
          if string.find(getgenv().pormap, "namek") then
            getgenv().pormap = "Planet Namak"
          elseif string.find(getgenv().pormap, "aot") then
            getgenv().pormap = "Attack On Titan"
          elseif string.find(getgenv().pormap, "demonslayer") then
            getgenv().pormap = "Demon Slayer"
          elseif string.find(getgenv().pormap, "naruto") then
            getgenv().pormap = "Hidden Sand Village"
          elseif string.find(getgenv().pormap, "marine") then
            getgenv().pormap = "Marine's Ford"
          elseif string.find(getgenv().pormap, "tokyoghoul") then
            getgenv().pormap = "Ghoul City"
          elseif string.find(getgenv().pormap, "hueco") then
            getgenv().pormap = "Hollows World"
          elseif string.find(getgenv().pormap, "hxhant") then
            getgenv().pormap = "Ant Kingdom"
          elseif string.find(getgenv().pormap, "magnolia") then
            getgenv().pormap = "Magic Town"
          elseif string.find(getgenv().pormap, "jjk") then
            getgenv().pormap = "Cursed Academy"
          elseif string.find(getgenv().pormap, "clover") then
            getgenv().pormap = "Clover Kingdom"
          elseif string.find(getgenv().pormap, "jojo") then
            getgenv().pormap = "Cape Canaveral"
          elseif string.find(getgenv().pormap, "csm") then
            getgenv().pormap = "Chainsaw Man"
          end
          if string.find(getgenv().pormodifier, "fast") then
            getgenv().pormodifier = "Fast Enemies"
          elseif string.find(getgenv().pormodifier, "high") then
            getgenv().pormodifier = "High Cost"
          elseif string.find(getgenv().pormodifier, "shield") then
            getgenv().pormodifier = "Shield Enemies" 
          elseif string.find(getgenv().pormodifier, "regen") then
            getgenv().pormodifier = "Regen Enemies"
          elseif string.find(getgenv().pormodifier, "short") then
            getgenv().pormodifier = "Short Range Units"
          elseif string.find(getgenv().pormodifier, "tank") then
            getgenv().pormodifier = "Tank Enemies"
          elseif getgenv().pormap == 'Chainsaw Man' then
            getgenv().pormodifier = "No Modifier"
          end
        end
        if game:GetService("Workspace")["_PORTALS"].Lobbies["_lobbytemplateportal29"].Active.Value == true then
            if string.find(getgenv().pormap, "winter_1") then
              getgenv().pormapact = "Act 1"
            elseif string.find(getgenv().pormap, "winter_2") then
              getgenv().pormapact = "Act 2"
            elseif string.find(getgenv().pormap, "winter_3") then
              getgenv().pormapact = "Act 3"
            elseif string.find(getgenv().pormap, "winter_4") then
              getgenv().pormapact = "Act 4"
            elseif string.find(getgenv().pormap, "winter_5") then
              getgenv().pormapact = "Act 5"
            elseif string.find(getgenv().pormap, "winter_6") then
              getgenv().pormapact = "Act 6"
            else
              getgenv().pormapact = "Error Getting Act Number"
            end
          if getgenv().ownerofpor ~= "nil" then 
            task.wait()
            getgenv().pormul = game:GetService("Workspace")["_PORTALS"].Lobbies["_lobbytemplateportal29"].Timer.Value
            getgenv().pordif = game:GetService("Workspace")["_PORTALS"].Lobbies["_lobbytemplateportal29"]["lobby_difficulty_scale"].Value
            getgenv().poract = game:GetService("Workspace")["_PORTALS"].Lobbies["_lobbytemplateportal29"].Level.Value
            getgenv().porplayers = game:GetService("Workspace")["_PORTALS"].Lobbies["_lobbytemplateportal29"].Players:GetChildren()
            Library:SetWatermark('You Have Joined/Opened A Portal\n\nPortal Owner: '..getgenv().ownerofpor..'\nTime Until Start: '..tostring(getgenv().pormul)..'\nGame Map: '..tostring(getgenv().pormap).." Act "..tostring((string.match(getgenv().poract, '%d[%d.,]*'))).."\nGame Modifier: "..tostring(getgenv().pormodifier)..'\nPortal Difficulty Scale: '..tostring(string.format("%2.1f", getgenv().pordif))..'x')
          end
        end
      end
    end
end)
end

Library:OnUnload(function()
    print('Unloaded!')
    Library.Unloaded = true
end)

coroutine.resume(coroutine.create(function()
    local GameFinished = game:GetService("Workspace"):WaitForChild("_DATA"):WaitForChild("GameFinished")
    GameFinished:GetPropertyChangedSignal("Value"):Connect(function()
        print("Changed", GameFinished.Value == true)
        if GameFinished.Value == true then
            repeat task.wait() until  game:GetService("Players").LocalPlayer.PlayerGui.ResultsUI.Enabled == true
            task.wait()
            if getgenv().autoleave then
                game:GetService("TeleportService"):Teleport(8304191830, LocalPlayer)
            end
        end
    end)
end))

if not game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("items").grid.List.Outer.ItemFrames:FindFirstChild("portal_csm") then
  if getgenv().autousepors1 == true then
    game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_0")
    game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_1")
  end
end
if not game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("items").grid.List.Outer.ItemFrames:FindFirstChild("portal_csm2") then
  if getgenv().autousepors2 == true then
    game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_2")
    game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_3")
  end
end
if not game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("items").grid.List.Outer.ItemFrames:FindFirstChild("portal_csm3") then
  if getgenv().autobuypors3 == true then
    game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_4")
    game:GetService("ReplicatedStorage").endpoints.client_to_server.buy_csmportal_shop_item:InvokeServer("csm_contract_5")
  end
end

task.spawn(function()
  while task.wait() do
    if game.PlaceId ~= 8349889591 then 
      if game.Players.LocalPlayer.AlreadyInLobby.Value == false then 
        if getgenv().autousepors1 == true then
          for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("items").grid.List.Outer.ItemFrames:GetChildren()) do 
            if v.Name == 'portal_csm' then 
              game:GetService("ReplicatedStorage").endpoints.client_to_server.use_portal:InvokeServer(tostring(v._uuid_or_id.Value), {["friends_only"] = getgenv().friendsonlyop})
              if getgenv().autostart == true then 
                local args = {
                    [1] = "_lobbytemplateportal29"
                }
                
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_start_game:InvokeServer(unpack(args))
                local args = {
                    [1] = "_lobbytemplateportal30"
                }
                
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_start_game:InvokeServer(unpack(args))
                local args = {
                    [1] = "_lobbytemplateportal31"
                }
                
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_start_game:InvokeServer(unpack(args))
                local args = {
                    [1] = "_lobbytemplateportal32"
                }
                
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_start_game:InvokeServer(unpack(args))
                  local args = {
                    [1] = "_lobbytemplateportal33"
                }
                
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_start_game:InvokeServer(unpack(args))
              end              
              break
            end
          end
        end
      end
      if game.Players.LocalPlayer.AlreadyInLobby.Value == false then 
        if getgenv().autousepors2 == true then 
          for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("items").grid.List.Outer.ItemFrames:GetChildren()) do 
            if v.Name == 'portal_csm2' then 
              game:GetService("ReplicatedStorage").endpoints.client_to_server.use_portal:InvokeServer(tostring(v._uuid_or_id.Value), {["friends_only"] = getgenv().friendsonlyop})
              if getgenv().autostart == true then 
                local args = {
                    [1] = "_lobbytemplateportal29"
                }
                
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_start_game:InvokeServer(unpack(args))
                local args = {
                    [1] = "_lobbytemplateportal30"
                }
                
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_start_game:InvokeServer(unpack(args))
                local args = {
                    [1] = "_lobbytemplateportal31"
                }
                
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_start_game:InvokeServer(unpack(args))
                local args = {
                    [1] = "_lobbytemplateportal32"
                }
                
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_start_game:InvokeServer(unpack(args))
                  local args = {
                    [1] = "_lobbytemplateportal33"
                }
                
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_start_game:InvokeServer(unpack(args))
              end   
              break
            end
          end
        end
      end
      if game.Players.LocalPlayer.AlreadyInLobby.Value == false then 
        if getgenv().autousepors3 == true then 
          for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("items").grid.List.Outer.ItemFrames:GetChildren()) do 
            if v.Name == 'portal_csm3' then 
              game:GetService("ReplicatedStorage").endpoints.client_to_server.use_portal:InvokeServer(tostring(v._uuid_or_id.Value), {["friends_only"] = getgenv().friendsonlyop})
              if getgenv().autostart == true then 
                local args = {
                    [1] = "_lobbytemplateportal29"
                }
                
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_start_game:InvokeServer(unpack(args))
                local args = {
                    [1] = "_lobbytemplateportal30"
                }
                
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_start_game:InvokeServer(unpack(args))
                local args = {
                    [1] = "_lobbytemplateportal31"
                }
                
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_start_game:InvokeServer(unpack(args))
                local args = {
                    [1] = "_lobbytemplateportal32"
                }
                
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_start_game:InvokeServer(unpack(args))
                  local args = {
                    [1] = "_lobbytemplateportal33"
                }
                
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_start_game:InvokeServer(unpack(args))
              end   
              break
            end
          end
        end
      end
    end
  end
end)


task.spawn(function()
  while task.wait() do
      if getgenv().autojoinpors1 == true then
          for _, v in next, game:WaitForChild("Workspace"):WaitForChild("_PORTALS"):WaitForChild("Lobbies"):GetChildren() do
            if v.portal_depth.Value == 1 then
              if string.find(tostring(v.Level.Value), "csm") then
                  game:GetService("ReplicatedStorage").endpoints.client_to_server.request_join_lobby:InvokeServer(tostring(v))
              end
            end
          end
      end
      if getgenv().autojoinpors0 == true then
        for _, v in next, game:WaitForChild("Workspace"):WaitForChild("_PORTALS"):WaitForChild("Lobbies"):GetChildren() do
          if v.portal_depth.Value == 0 then
            if string.find(tostring(v.Level.Value), "csm") then
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_join_lobby:InvokeServer(tostring(v))
            end
          end
        end
    end
      if getgenv().autojoinpors2 == true then
        for _, v in next, game:WaitForChild("Workspace"):WaitForChild("_PORTALS"):WaitForChild("Lobbies"):GetChildren() do
          if v.portal_depth.Value == 2 then
            if string.find(tostring(v.Level.Value), "csm") then
                game:GetService("ReplicatedStorage").endpoints.client_to_server.request_join_lobby:InvokeServer(tostring(v))
            end
          end
        end
    end
    if getgenv().autojoinpors3 == true then
      for _, v in next, game:WaitForChild("Workspace"):WaitForChild("_PORTALS"):WaitForChild("Lobbies"):GetChildren() do
        if v.portal_depth.Value == 3 then
          if string.find(tostring(v.Level.Value), "csm") then
              game:GetService("ReplicatedStorage").endpoints.client_to_server.request_join_lobby:InvokeServer(tostring(v))
          end
        end
      end
  end
  if getgenv().autojoinpors4 == true then
    for _, v in next, game:WaitForChild("Workspace"):WaitForChild("_PORTALS"):WaitForChild("Lobbies"):GetChildren() do
      if v.portal_depth.Value == 4 then
        if string.find(tostring(v.Level.Value), "csm") then
            game:GetService("ReplicatedStorage").endpoints.client_to_server.request_join_lobby:InvokeServer(tostring(v))
        end
      end
    end
end
if getgenv().autojoinpors5 == true then
  for _, v in next, game:WaitForChild("Workspace"):WaitForChild("_PORTALS"):WaitForChild("Lobbies"):GetChildren() do
    if v.portal_depth.Value == 5 then
      if string.find(tostring(v.Level.Value), "csm") then
          game:GetService("ReplicatedStorage").endpoints.client_to_server.request_join_lobby:InvokeServer(tostring(v))
      end
    end
  end
end
  end
end)

task.spawn(function()
  while task.wait() do
      local _wave = game:GetService("Workspace"):WaitForChild("_wave_num")
      if getgenv().autosell and tonumber(getgenv().sellatwave) <= _wave.Value then
          if game.PlaceId ~= 8304191830 then
              repeat task.wait() until game:GetService("Workspace"):WaitForChild("_UNITS")
              for i, v in ipairs(game:GetService("Workspace")["_UNITS"]:GetChildren()) do
                  repeat
                      task.wait()
                  until v:WaitForChild("_stats")
                  if tostring(v["_stats"].player.Value) == game.Players.LocalPlayer.Name then
                      if v.Name == ("speedwagon") then 
                          game:GetService("ReplicatedStorage").endpoints.client_to_server.sell_unit_ingame:InvokeServer(v)
                      end
                  end
              end
          end
      end
  end
end)

-- UI Settings
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

-- I set NoUI so it does not show up in the keybinds menu
MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'End', NoUI = true, Text = 'Menu keybind' }) 

Library.ToggleKeybind = Options.MenuKeybind -- Allows you to have a custom keybind for the menu

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- ThemeManager (Allows you to have a menu theme system)

-- Hand the library over to our managers
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

-- Ignore keys that are used by ThemeManager. 
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings() 

-- Adds our MenuKeybind to the ignore list 
-- (do you want each config to have a different menu key? probably not.)
-- use case for doing it this way: 
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
ThemeManager:SetFolder('Cartihub')
SaveManager:SetFolder('Cartihub Devil Update')

-- Builds our config menu on the right side of our tab
SaveManager:BuildConfigSection(Tabs['UI Settings']) 

-- Builds our theme menu (with plenty of built in themes) on the left side
-- NOTE: you can also call ThemeManager:ApplyToGroupbox to add it to a specific groupbox
ThemeManager:ApplyToTab(Tabs['UI Settings'])

-- You can use the SaveManager:LoadAutoloadConfig() to load a config 
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
